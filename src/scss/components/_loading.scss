/* ============================================
   Loading - Spinners and Loading States
   ============================================ */

@use '../abstracts' as *;

/* ============================================
   Base Spinner Styles
   ============================================ */

.spinner {
  display: inline-block;
  width: 2rem;
  height: 2rem;
  vertical-align: text-bottom;
  border: 0.25em solid currentColor;
  border-right-color: transparent;
  border-radius: 50%;
  animation: spinner-rotate 0.75s linear infinite;

  // Size variants
  &.spinner-sm {
    width: 1rem;
    height: 1rem;
    border-width: 0.125em;
  }

  &.spinner-lg {
    width: 3rem;
    height: 3rem;
    border-width: 0.375em;
  }

  &.spinner-xl {
    width: 4rem;
    height: 4rem;
    border-width: 0.5em;
  }
}

/* ============================================
   Loading Spinner Component
   ============================================ */

.loading-spinner {
  @include loading-spinner;

  &.size-small {
    @include loading-spinner(1rem, 0.15em, currentColor);
  }

  &.size-medium {
    @include loading-spinner(1.5rem, 0.2em, currentColor);
  }

  &.size-large {
    @include loading-spinner(2.5rem, 0.3em, currentColor);
  }
}

/* ============================================
   Loader Container
   ============================================ */

.loader-container {
  position: relative;
  @include flex-center;

  &.overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba($white, 0.8);
    backdrop-filter: blur(2px);
    z-index: map-get($z-indexes, modal);
  }

  &.fullscreen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba($white, 0.9);
    z-index: map-get($z-indexes, modal);
  }

  .loader {
    @include loading-spinner(2rem, 0.25em, $primary);
  }
}

/* ============================================
   Loading States
   ============================================ */

.loading-state {
  @include flex-center;
  flex-direction: column;
  gap: map-get($spacers, 4);
  padding: map-get($spacers, 8);
  text-align: center;

  .loading-spinner {
    @include loading-spinner(3rem, 0.3em, $primary);
  }

  .loading-text {
    color: $text-primary;
    font-size: map-get($font-sizes, lg);
    font-weight: map-get($font-weights, medium);
  }

  .loading-subtitle {
    color: $text-muted;
    font-size: map-get($font-sizes, base);
    margin-top: map-get($spacers, 2);
  }

  // State variants
  &.loading-error {
    .loading-spinner {
      display: none;
    }

    .loading-text {
      color: $danger;
    }

    &::before {
      content: "❌";
      font-size: 3rem;
      margin-bottom: map-get($spacers, 2);
    }
  }

  &.loading-success {
    .loading-spinner {
      display: none;
    }

    .loading-text {
      color: $success;
    }

    &::before {
      content: "✅";
      font-size: 3rem;
      margin-bottom: map-get($spacers, 2);
    }
  }
}

/* ============================================
   Skeleton Loading
   ============================================ */

.skeleton {
  background: linear-gradient(90deg, $gray-200 25%, rgba($gray-200, 0.5) 50%, $gray-200 75%);
  background-size: 200% 100%;
  animation: skeleton-loading 1.5s infinite;
  border-radius: map-get($border-radius, base);

  &.skeleton-text {
    height: 1em;
    margin-bottom: 0.5em;

    &:last-child {
      margin-bottom: 0;
    }
  }

  &.skeleton-title {
    height: 1.5em;
    width: 60%;
    margin-bottom: 1em;
  }

  &.skeleton-paragraph {
    height: 1em;
    margin-bottom: 0.5em;

    &:nth-child(odd) {
      width: 100%;
    }

    &:nth-child(even) {
      width: 85%;
    }

    &:last-child {
      width: 70%;
      margin-bottom: 0;
    }
  }

  &.skeleton-circle {
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
  }

  &.skeleton-rectangle {
    width: 100%;
    height: 8rem;
  }

  &.skeleton-button {
    width: 6rem;
    height: 2.5rem;
    border-radius: map-get($border-radius, md);
  }
}

/* ============================================
   Progress Indicators
   ============================================ */

.progress-ring {
  position: relative;
  display: inline-block;
  width: 3rem;
  height: 3rem;

  svg {
    width: 100%;
    height: 100%;
    transform: rotate(-90deg);
  }

  .progress-ring-circle {
    fill: transparent;
    stroke: $gray-300;
    stroke-width: 4;
    stroke-dasharray: 125.6;
    stroke-dashoffset: 125.6;
    transition: stroke-dashoffset 0.3s ease;

    &.progress-active {
      stroke: $primary;
    }
  }

  .progress-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 0.875rem;
    font-weight: map-get($font-weights, semibold);
    color: $text-primary;
  }
}

/* ============================================
   Pulse Loading
   ============================================ */

.pulse-loading {
  animation: pulse 2s infinite;

  &.pulse-fast {
    animation-duration: 1s;
  }

  &.pulse-slow {
    animation-duration: 3s;
  }
}

/* ============================================
   Dot Loading Animation
   ============================================ */

.dots-loading {
  display: inline-flex;
  gap: 0.25rem;
  align-items: center;

  .dot {
    width: 0.5rem;
    height: 0.5rem;
    background-color: $primary;
    border-radius: 50%;
    animation: dots-bounce 1.4s infinite ease-in-out;

    &:nth-child(1) {
      animation-delay: -0.32s;
    }

    &:nth-child(2) {
      animation-delay: -0.16s;
    }

    &:nth-child(3) {
      animation-delay: 0;
    }
  }
}

/* ============================================
   Wave Loading Animation
   ============================================ */

.wave-loading {
  display: inline-flex;
  gap: 0.125rem;
  align-items: center;

  .wave-bar {
    width: 0.25rem;
    height: 1rem;
    background-color: $primary;
    animation: wave-scale 1.2s infinite ease-in-out;

    &:nth-child(1) {
      animation-delay: -1.1s;
    }

    &:nth-child(2) {
      animation-delay: -1.0s;
    }

    &:nth-child(3) {
      animation-delay: -0.9s;
    }

    &:nth-child(4) {
      animation-delay: -0.8s;
    }

    &:nth-child(5) {
      animation-delay: -0.7s;
    }
  }
}

/* ============================================
   Content Loading States
   ============================================ */

.content-loading {
  position: relative;

  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba($white, 0.8);
    backdrop-filter: blur(1px);
    @include flex-center;
    z-index: 1;
  }

  &.loading::after {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Cpath fill='%23007bff' d='M20 0 A20 20 0 0 1 40 20 A20 20 0 0 1 20 40 A20 20 0 0 1 0 20 A20 20 0 0 1 20 0 Z' opacity='0.2'/%3E%3Cpath fill='%23007bff' d='M20 0 A20 20 0 0 1 40 20 L25 20 A5 5 0 0 0 20 15 Z'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 20 20' to='360 20 20' dur='1s' repeatCount='indefinite'/%3E%3C/path%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: center;
  }
}

/* ============================================
   Keyframe Animations
   ============================================ */

@keyframes spinner-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes skeleton-loading {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

@keyframes dots-bounce {
  0%, 80%, 100% {
    transform: scale(0.8);
    opacity: 0.5;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes wave-scale {
  0%, 40%, 100% {
    transform: scaleY(0.4);
  }
  20% {
    transform: scaleY(1);
  }
}

/* ============================================
   Form Loading States
   ============================================ */

.form-loading {
  position: relative;

  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba($white, 0.9);
    backdrop-filter: blur(1px);
    @include flex-center;
    z-index: map-get($z-indexes, modal);
  }

  .form-control,
  .form-select,
  .btn {
    pointer-events: none;
    opacity: 0.6;
  }
}

.button-loading {
  position: relative;
  pointer-events: none;

  .btn-text {
    opacity: 0;
  }

  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    @include loading-spinner(1rem, 0.15em, currentColor);
  }
}

/* ============================================
   Responsive Loading Styles
   ============================================ */

@include media-breakpoint-down(md) {
  .loading-state {
    padding: map-get($spacers, 6);

    .loading-spinner {
      @include loading-spinner(2.5rem, 0.25em, $primary);
    }

    .loading-text {
      font-size: map-get($font-sizes, base);
    }
  }

  .loader-container {
    &.overlay {
      backdrop-filter: blur(1px);
    }
  }
}

@include media-breakpoint-down(sm) {
  .loading-state {
    padding: map-get($spacers, 4);

    .loading-spinner {
      @include loading-spinner(2rem, 0.2em, $primary);
    }

    .loading-text {
      font-size: map-get($font-sizes, sm);
    }
  }

  .skeleton {
    &.skeleton-title {
      width: 80%;
    }

    &.skeleton-paragraph {
      &:nth-child(even) {
        width: 95%;
      }

      &:last-child {
        width: 85%;
      }
    }
  }

  .progress-ring {
    width: 2.5rem;
    height: 2.5rem;

    .progress-text {
      font-size: 0.75rem;
    }
  }
}

/* ============================================
   Print Styles
   ============================================ */

@media print {
  .loading-spinner,
  .loader-container,
  .loading-state,
  .skeleton,
  .pulse-loading,
  .dots-loading,
  .wave-loading {
    display: none !important;
  }

  .content-loading::after,
  .form-loading::after,
  .button-loading::after {
    display: none !important;
  }
}